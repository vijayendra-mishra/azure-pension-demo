name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Create Release Branch
      run: |
        RELEASE_VERSION="${{ github.event.inputs.version }}"
        RELEASE_BRANCH="release/$RELEASE_VERSION"
        
        echo "Creating release branch: $RELEASE_BRANCH"
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Create and push release branch from current main
        git checkout -b $RELEASE_BRANCH
        git push origin $RELEASE_BRANCH
        
        echo "‚úÖ Release branch created: $RELEASE_BRANCH"
        echo "üìã Next steps:"
        echo "1. This will trigger deployment to DEV environment"
        echo "2. Create PR from $RELEASE_BRANCH to main when ready"
        echo "3. Merge PR to deploy to PROD and run Terraform plan"
    
    - name: Create Pull Request
      uses: actions/github-script@v6
      with:
        script: |
          const version = "${{ github.event.inputs.version }}";
          const releaseBranch = `release/${version}`;
          
          const { data: pr } = await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Release ${version}`,
            head: releaseBranch,
            base: 'main',
            body: `## Release ${version}
            
            ### üöÄ Deployment Plan
            - ‚úÖ **DEV**: Automatically deployed when release branch was created
            - ‚è∏Ô∏è **PROD**: Will deploy when this PR is merged
            - üèóÔ∏è **Infrastructure**: Terraform plan will run for PROD (manual apply required)
            
            ### üîç Testing Checklist
            - [ ] DEV deployment successful
            - [ ] Function endpoints working
            - [ ] API tests passing
            - [ ] Ready for production deployment
            
            ### üìã Merge Instructions
            1. Verify DEV deployment is working
            2. Approve this PR
            3. Merge to main
            4. Monitor PROD deployment
            5. Apply Terraform changes manually if needed
            6. Release branch will be auto-deleted after successful deployment
            `,
            draft: false
          });
          
          console.log(`Created PR #${pr.number}: ${pr.html_url}`);
