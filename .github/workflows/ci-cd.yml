name: CI/CD Pipeline

on:
  push:
    branches: [ main, 'release/**' ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0'
  AZURE_FUNCTIONAPP_NAME_DEV: 'vjs-pension-dev-func'
  AZURE_FUNCTIONAPP_NAME_PROD: 'vjs-pension-prod-func'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
    
    - name: Publish Function App
      run: dotnet publish src/Functions/ --configuration Release --output ./publish
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: function-app
        path: ./publish

  deploy-dev:
    if: startsWith(github.ref, 'refs/heads/release/') && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    environment: development
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: function-app
        path: ./publish
    
    - name: Deploy to Azure Functions (Dev)
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_DEV }}
        slot-name: 'production'
        package: './publish'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_DEV }}

  deploy-prod:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && contains(github.event.head_commit.message, 'release/')
    runs-on: ubuntu-latest
    needs: build
    environment: production
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: function-app
        path: ./publish
    
    - name: Deploy to Azure Functions (Prod)
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_PROD }}
        slot-name: 'production'
        package: './publish'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_PROD }}

  cleanup-release:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && contains(github.event.head_commit.message, 'release/')
    runs-on: ubuntu-latest
    needs: deploy-prod
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Delete Release Branch
      run: |
        # Extract release branch name from commit message
        RELEASE_BRANCH=$(echo "${{ github.event.head_commit.message }}" | grep -o 'release/[^"]*' | head -1)
        if [ ! -z "$RELEASE_BRANCH" ]; then
          echo "Deleting release branch: $RELEASE_BRANCH"
          git push origin --delete $RELEASE_BRANCH || echo "Branch may already be deleted"
        else
          echo "No release branch found in commit message"
        fi
